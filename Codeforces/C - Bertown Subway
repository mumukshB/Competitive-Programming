import java.util.Arrays;
import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Scanner;

public class duh {
    public static void main(String[] args) {
        Scanner ob=new Scanner(System.in);
        int n=ob.nextInt();
        int[] ar=new int[n+1];
        for(int i=1;i<=n;i++)
            ar[i]=ob.nextInt();
        boolean[] visited=new boolean[n+1];
        PriorityQueue<Integer> pq=new PriorityQueue<Integer>(new great());
        Arrays.fill(visited,false);
        for(int j=1;j<=n;j++)
        {
            if(!visited[j])
            {
                visited[j]=true;
                int component=1;
                int e=ar[j];
                while(e!=j)
                {
                    component++;
                    visited[e]=true;
                    e=ar[e];
                }
                pq.add(component);
            }
        }
        if (pq.size() == 1) {
            long connected = (long)pq.poll();
            System.out.println(connected*connected);
        }
        else {
            int x = pq.poll();
            int y = pq.poll();
            pq.add(x+y);
            long ans = 0;
            while (!pq.isEmpty()) {
                long connected = (long)pq.poll();
                ans = ans + connected*connected;
            }
            System.out.println(ans);
    }
}}
class great implements Comparator<Integer>
{
    public int compare(Integer ob1,Integer ob2)
    {
        return ob2.intValue()-ob1.intValue();
    }
}
