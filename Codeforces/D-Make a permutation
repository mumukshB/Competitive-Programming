import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.*;

public class diversity {
    public static void main(String[] args) throws IOException {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        final String[] numbers;
        final int n=Integer.parseInt(br.readLine());
        final int[] ar=new int[n];
        numbers=br.readLine().split("\\s");
        for(int i=0;i<n;i++)
            ar[i]=Integer.parseInt(numbers[i]);
        int[] result=new int[n];
        result=solver.solve(n,ar);
        for(int i=0;i<result.length;i++)
            System.out.print(result[i]+" ");

    }}

    class solver{

        static int[] solve(int n,int[] ar) {
            final StringBuilder sb = new StringBuilder();
            final HashMap<Integer, Integer> hm = new HashMap<>();
            final int[] b=new int[2*n+1];
            int add=0,l=1;
            boolean marked=true,flag1=false;
            int count=0;
            b[0]=0;
            for(int k=1;k<=ar.length;k++)
                b[k]=ar[k-1];
            int size=ar.length;

            size++;
            Arrays.sort(b,1,size);

            for (int j=0;j< ar.length;j++)
            {
                if(!hm.containsKey(ar[j]))
                {hm.put(ar[j],1);}
                else {
                    hm.put(ar[j], hm.get(ar[j]) + 1);
                }}
                int index=1;

                for(int k=0;k<ar.length;k++) {
                if(marked)
                {
                    int flag=0;
                    if(!flag1)
                    {for (int i = index; i < size; i++) {
                        if (b[i] - b[i - 1] > 1) {
                            index = i;
                            flag = 1;
                            break;

                        }
                    }}

                    if (flag!= 1)
                    {index = size;
                            flag1=true;}
                            if(flag1==true)
                            {add = b[size-1] + l;
                            l++;
                            }
                    else {add=b[index-1]+1;
                    b[index-1]=b[index-1]+1;
                    }

                }
                    marked=false;
                if(hm.get(ar[k])==1)
                    continue;
                    if (hm.get(ar[k]) == 0)
                    {ar[k] = add;
                    marked=true;
                    count++;
                    }
                    else if (hm.get(ar[k]) > 1 && add < ar[k]) {
                        hm.replace(ar[k],hm.get(ar[k])-1);
                        ar[k] = add;
                        marked=true;
                        count++;
                    } else if (hm.get(ar[k]) > 1 && add > ar[k])
                        hm.put(ar[k], 0);

                }
System.out.println(count);


       return ar; }}
